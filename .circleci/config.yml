aliases:
  - &defaults
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.5.4-node-browsers
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: fstool_e2etest
      - image: redis:3.2.11

version: 2
jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "client/package.json" }}
          - v1-dependencies-
      - run: cd client && yarn
      - save_cache:
          paths:
            - client/node_modules
          key: v1-dependencies-{{ checksum "client/package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: cd client && yarn test --ci --runInBand
      - run: cd client && bash <(curl -s https://codecov.io/bash)

  install-e2e-dependencies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: prepare backend
          command: |
            set -x
            apt-get update && apt-get install -y virtualenv
            cd server
            env/bin/pip install --upgrade pip
            env/bin/pip install -r requirements-dev.txt
            env/bin/pip-sync requirements*.txt
            cp config/local_settings.py.ci config/local_settings.py
      - persist_to_workspace:
          root: ~/repo
          paths:
            - server/*

  backend-test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: backend test
        command: |
          set -x
          env/bin/coverage run manage.py test
          env/bin/flake8 ./
          env/bin/coverage html -d $CIRCLE_ARTIFACTS
          env/bin/pip install codecov && env/bin/codecov

  e2e-test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: run backend
          command: |
            set -x
            cd server
            env/bin/python manage.py migrate
            env/bin/python manage.py runserver
          background: true
      - run:
          name: run frontend
          command: cd client && yarn serve
          background: true
      - run:
          name: wait for frontend to get ready
          command: wget --retry-connrefused -T 30 http://localhost:8080
      - run:
          name: wait for backend to get ready
          command: wget --retry-connrefused -T 30 http://localhost:8000/api/groups-info/
      - run:
          name: list all available browsers for your personal benefit
          command: cd client && $(yarn bin)/testcafe -b saucelabs
          background: true
      - run:
          name: testcafe
          command: cd client && yarn e2e --ci

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: cd client && yarn lint

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: cd client && yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - client/dist

  build-storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: cd client && yarn build-storybook
      - persist_to_workspace:
          root: ~/repo
          paths:
            - client/storybook-static

  build-docs:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: cd client && yarn build-docs
      - persist_to_workspace:
          root: ~/repo
          paths:
            - client/docs-dist

workflows:
  version: 2
  all-the-things:
    jobs:
      - install-dependencies
      - test:
          requires:
            - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - build:
          requires:
            - install-dependencies
      - build-storybook:
          requires:
            - install-dependencies
      - build-docs:
          requires:
            - install-dependencies
      - install-e2e-dependencies:
          requires:
            - install-dependencies
      - backend-test:
          requires:
            - install-e2e-dependencies
      - e2e-test:
          requires:
            - backend-test
